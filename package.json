{
  "name": "highlight-extension",
  "displayName": "Logs highlighter",
  "publisher": "wegielek",
  "license": "MIT",
  "icon": "images/logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/nestrockx/highlight-extension.git"
  },
  "description": "Extension for higlighting the debugging logs",
  "version": "1.0.2",
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "activationEvents": [
      "onView:chipFilters"
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "filters-explorer",
          "title": "Filters explorer",
          "icon": "resources/dark/filter.svg"
        }
      ]
    },
    "views": {
      "filters-explorer": [
        {
          "id": "chipFilters",
          "name": "Filters",
          "icon": "resources/dark/filter.svg",
          "contextualTitle": "Filters Explorer"
        }
      ]
    },
    "commands": [
      {
        "command": "chipFilters.filterOut",
        "title": "FilterOut"
      },
      {
        "command": "chipFilters.openFile",
        "title": "Open a File"
      },
      {
        "command": "chipFilters.newFile",
        "title": "New file",
        "icon": {
          "light": "resources/light/new_file.svg",
          "dark": "resources/dark/new_file.svg"
        }
      },
      {
        "command": "chipFilters.delete",
        "title": "Remove",
        "icon": {
          "light": "resources/light/delete.svg",
          "dark": "resources/dark/delete.svg"
        }
      },
      {
        "command": "chipFilters.toggleOff",
        "title": "CheckOff",
        "icon": {
          "light": "resources/light/check_box_fill.svg",
          "dark": "resources/dark/check_box_fill.svg"
        }
      },
      {
        "command": "chipFilters.toggleOn",
        "title": "CheckOn",
        "icon": {
          "light": "resources/light/check_box.svg",
          "dark": "resources/dark/check_box.svg"
        }
      },
      {
        "command": "chipFilters.matchCaseOff",
        "title": "MatchCaseOff",
        "icon": {
          "light": "resources/light/match_case_fill.svg",
          "dark": "resources/dark/match_case_fill.svg"
        }
      },
      {
        "command": "chipFilters.matchCaseOn",
        "title": "MatchCaseOn",
        "icon": {
          "light": "resources/light/match_case.svg",
          "dark": "resources/dark/match_case.svg"
        }
      },
      {
        "command": "chipFilters.matchWordOff",
        "title": "MatchNameOff",
        "icon": {
          "light": "resources/light/match_word_fill.svg",
          "dark": "resources/dark/match_word_fill.svg"
        }
      },
      {
        "command": "chipFilters.matchWordOn",
        "title": "MatchNameOn",
        "icon": {
          "light": "resources/light/match_word.svg",
          "dark": "resources/dark/match_word.svg"
        }
      },
      {
        "command": "chipFilters.matchRegexOff",
        "title": "MatchRegexOff",
        "icon": {
          "light": "resources/light/regexp_bold.svg",
          "dark": "resources/dark/regexp_bold.svg"
        }
      },
      {
        "command": "chipFilters.matchRegexOn",
        "title": "MatchRegexOn",
        "icon": {
          "light": "resources/light/regexp_thin.svg",
          "dark": "resources/dark/regexp_thin.svg"
        }
      },
      {
        "command": "chipFilters.addFilter",
        "title": "Add filter",
        "icon": {
          "light": "resources/light/add.svg",
          "dark": "resources/dark/add.svg"
        }
      },
      {
        "command": "chipFilters.refresh",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "chipFilters.reset",
        "title": "Shutdown",
        "icon": {
          "light": "resources/light/cancel.svg",
          "dark": "resources/dark/cancel.svg"
        }
      },
      {
        "command": "chipFilters.yellow",
        "title": "Yellow"
      },
      {
        "command": "chipFilters.red",
        "title": "Red"
      },
      {
        "command": "chipFilters.darkred",
        "title": "Dark red"
      },
      {
        "command": "chipFilters.pink",
        "title": "Pink"
      },
      {
        "command": "chipFilters.blue",
        "title": "Blue"
      },
      {
        "command": "chipFilters.black",
        "title": "Black"
      },
      {
        "command": "chipFilters.orange",
        "title": "Orange"
      },
      {
        "command": "chipFilters.white",
        "title": "White"
      },
      {
        "command": "chipFilters.green",
        "title": "Green"
      },
      {
        "command": "chipFilters.purple",
        "title": "Purple"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "chipFilters.addFilter",
          "when": "view == chipFilters",
          "group": "navigation"
        },
        {
          "command": "chipFilters.refresh",
          "when": "view == chipFilters",
          "group": "navigation"
        },
        {
          "command": "chipFilters.reset",
          "when": "view == chipFilters",
          "group": "navigation"
        },
        {
          "command": "chipFilters.newFile",
          "when": "view == chipFilters",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "chipFilters.delete",
          "when": "view == chipFilters",
          "group": "inline"
        },
        {
          "command": "chipFilters.toggleOff",
          "when": "view == chipFilters && (viewItem =~ /^F...$/)",
          "group": "inline"
        },
        {
          "command": "chipFilters.toggleOn",
          "when": "view == chipFilters && (viewItem =~ /^f...$/)",
          "group": "inline"
        },
        {
          "command": "chipFilters.matchCaseOff",
          "when": "view == chipFilters && (viewItem =~ /^.C..$/)",
          "group": "inline"
        },
        {
          "command": "chipFilters.matchCaseOn",
          "when": "view == chipFilters && (viewItem =~ /^.c..$/)",
          "group": "inline"
        },
        {
          "command": "chipFilters.matchWordOff",
          "when": "view == chipFilters && (viewItem =~ /^..W.$/)",
          "group": "inline"
        },
        {
          "command": "chipFilters.matchWordOn",
          "when": "view == chipFilters && (viewItem =~ /^..w.$/)",
          "group": "inline"
        },
        {
          "command": "chipFilters.matchRegexOff",
          "when": "view == chipFilters && (viewItem =~ /^...R$/)",
          "group": "inline"
        },
        {
          "command": "chipFilters.matchRegexOn",
          "when": "view == chipFilters && (viewItem =~ /^...r$/)",
          "group": "inline"
        },
        {
          "command": "chipFilters.yellow",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.red",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.darkred",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.pink",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.blue",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.black",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.orange",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.white",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.green",
          "when": "view == chipFilters"
        },
        {
          "command": "chipFilters.purple",
          "when": "view == chipFilters"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "chipFilters",
        "contents": "NO FILTERS",
        "when": "file == exists"
      },
      {
        "view": "chipFilters",
        "contents": "[Add filter](command:chipFilters.filterOut)",
        "when": "file == exists"
      },
      {
        "view": "chipFilters",
        "contents": "[Open a file](command:chipFilters.openFile)",
        "when": "file != exists"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "eslint": "^8.57.0",
    "typescript": "^5.8.2"
  },
  "dependencies": {
    "@eslint/config-array": "^0.19.2"
  }
}
